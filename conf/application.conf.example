# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="UHmbr]puPP0rM3D4K>rjBUeEUpO3cMJ6J]E_PnWG]jgpFcCEiOZX[fvI/PEacget"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=controllers.GlobalOverride

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
db.default.driver=org.sqlite.JDBC
db.default.url="jdbc:sqlite:zauberstuhl.db"
db.default.logStatements=true

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Custom configuration parameters
# ~~~~~
#
## Currency API
zauberstuhl.currency.convertTo = "EUR"
zauberstuhl.currency.endpoint = "http://api.fixer.io/latest?base={1}&symbols={2}"
# cache statistic request for X seconds
zauberstuhl.cache.expire= 3600
# btc conversion to EUR
zauberstuhl.btc.url = "https://blockchain.info/ticker"
zauberstuhl.btc.address = "1GCimNrGv6j7sN5xVXHxDvqiJZ8nmSFntS"
#
## Email settings
zauberstuhl.mail.address = "lukas@zauberstuhl.de"
zauberstuhl.mail.password = "password"
zauberstuhl.mail.imap = "mail.gandi.net"
zauberstuhl.mail.box = "INBOX/Diaspora/Donations"
#
## Expenditures
zauberstuhl.expenditures.reasons = [ "Domain", "Host", "Database" ]
zauberstuhl.expenditures.values =  [  27.98,    396,    596 ]
#
## Bank Account Data
zauberstuhl.bank.iban = "not set"
zauberstuhl.bank.bic = "not set"
#
## Recaptcha settings
zauberstuhl.recaptcha.url = "https://www.google.com/recaptcha/api/siteverify"
zauberstuhl.recaptcha.secret = "secret"
zauberstuhl.recaptcha.client = "client key"
#
## Paypal ID
zauberstuhl.paypal.id = "1234"
#
## Stripe.com API keys
zauberstuhl.stripe.apiKey = "123"
zauberstuhl.stripe.publishableKey = "123"
